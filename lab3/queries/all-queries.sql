/*
#1
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ОЦЕНКИ.КОД, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
Фильтры (AND):
a) Н_ОЦЕНКИ.КОД = незач.
b) Н_ВЕДОМОСТИ.ДАТА = 2022-06-08.
Вид соединения: INNER JOIN.
*/
SELECT 
  Н_ОЦЕНКИ.КОД, 
  Н_ВЕДОМОСТИ.ЧЛВК_ИД 
FROM 
  Н_ОЦЕНКИ 
  INNER JOIN Н_ВЕДОМОСТИ ON Н_ОЦЕНКИ.КОД = Н_ВЕДОМОСТИ.ОЦЕНКА 
WHERE 
  Н_ОЦЕНКИ.КОД = 'незач' 
  AND Н_ВЕДОМОСТИ.ДАТА = '2022-06-08';


/*
#2
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.НАЧАЛО.
Фильтры: (AND)
a) Н_ЛЮДИ.ИД = 163484.
b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 105590.
c) Н_УЧЕНИКИ.ИД < 150308.
Вид соединения: RIGHT JOIN.
*/
SELECT 
  Н_ЛЮДИ.ФАМИЛИЯ, 
  Н_ОБУЧЕНИЯ.НЗК, 
  Н_УЧЕНИКИ.НАЧАЛО 
FROM 
  Н_ЛЮДИ 
  RIGHT JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД 
  RIGHT JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
WHERE 
  Н_ЛЮДИ.ИД = 163484 
  AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 105590 
  AND Н_УЧЕНИКИ.ИД < 150308;


/*
#3
Составить запрос, который ответит на вопрос, есть ли среди студентов
вечерней формы обучения те, кто младше 20 лет.
*/
SELECT 
  Н_ЛЮДИ.ИД AS ЧЕЛОВЕК_ИД, 
  Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ, 
  Н_УЧЕНИКИ.ИД AS УЧЕНИК_ИД, 
  Н_ФОРМЫ_ОБУЧЕНИЯ.ИД AS ФОРМА_ОБУЧЕНИЯ_ИД 
FROM 
  Н_ЛЮДИ 
  INNER JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
  INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_УЧЕНИКИ.ВИД_ОБУЧ_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД 
WHERE 
  Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ > '2002-08-11' 
  AND Н_ЛЮДИ.ДАТА_СМЕРТИ > '2022-08-11' 
  AND Н_ФОРМЫ_ОБУЧЕНИЯ.ИД = 2;


/*
#4
Выдать различные имена преподавателей и число людей с каждой из этих имен,
ограничив список именами, встречающимися более 10 раз на ФКТИУ.
*/
SELECT 
  DISTINCT ЛЮДИ.ИМЯ, 
  count(*) AS ЧИСЛО_ЛЮДЕЙ 
FROM 
  Н_ЛЮДИ AS ЛЮДИ 
  JOIN Н_ПЛАНЫ AS ПЛАНЫ ON (
    ПРЕПОДАВАТЕЛИ.ПЛАН_ИД = ПЛАНЫ.ИД
  ) 
  JOIN Н_ОТДЕЛЫ AS ОТДЕЛЫ ON (
    ПЛАНЫ.ОТД_ИД = ОТДЕЛЫ.ИД
  ) 
WHERE 
  (
    ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
  ) 
GROUP BY 
  ЛЮДИ.ИМЯ 
HAVING 
  count(*) > 10;


/*
#5
Выведите таблицу со средним возрастом студентов во всех группах 
(Группа, Средний возраст), где средний возраст равен среднему возрасту в группе 1101.
*/
SELECT 
  УЧЕНИКИ.ГРУППА AS "ГРУППА", 
  (
    SELECT 
      AVG(
        extract(
          YEAR 
          FROM 
            age(
              Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ
            )
        ) :: INTEGER
      ) AS "СРЕДНИЙ ВОЗРАСТ" 
    FROM 
      Н_УЧЕНИКИ 
      JOIN Н_ЛЮДИ ON (
        Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
      ) 
    WHERE 
      (
        Н_УЧЕНИКИ.ГРУППА = '1101'
      )
  ) AS "СРЕДНИЙ ВОЗРАСТ" 
FROM 
  Н_УЧЕНИКИ AS УЧЕНИКИ 
GROUP BY 
  (УЧЕНИКИ.ГРУППА);


/*
#6 
Получить список студентов, зачисленных ровно первого сентября 2012
года на первый курс очной формы обучения.
В результат включить:
номер группы
номер, фамилию, имя и отчество студента
номер и состояние пункта приказа
Для реализации использовать подзапрос с IN
*/
SELECT 
  УЧЕНИКИ.ГРУППА AS "Номер группы", 
  УЧЕНИКИ.ИД AS "Номер студента", 
  ЛЮДИ.ФАМИЛИЯ AS "Фамилия", 
  ЛЮДИ.ИМЯ AS "Имя", 
  ЛЮДИ.ОТЧЕСТВО AS "Отчество", 
  УЧЕНИКИ.П_ПРКОК_ИД AS "Номер приказа", 
  УЧЕНИКИ.СОСТОЯНИЕ AS "Состояние приказа" 
FROM 
  Н_УЧЕНИКИ AS УЧЕНИКИ 
  JOIN Н_ЛЮДИ AS ЛЮДИ ON (
    УЧЕНИКИ.ЧЛВК_ИД = ЛЮДИ.ИД
  ) 
WHERE 
  (
    УЧЕНИКИ.ИД IN (
      SELECT 
        ИД 
      FROM 
        Н_УЧЕНИКИ AS УЧЕНИКИ 
      WHERE 
        (
          УЧЕНИКИ.ГРУППА LIKE '%1' 
          AND (
            УЧЕНИКИ.ВИД_ОБУЧ_ИД = 1 
            OR УЧЕНИКИ.ВИД_ОБУЧ_ИД = 3
          ) 
          AND УЧЕНИКИ.НАЧАЛО = '01.09.2012'
        )
    )
  );

  
/*
#7
Сформировать запрос для получения числа в группе No 3100 отличников.
*/
WITH УЧЕНИКИ_3100 AS (
  SELECT 
    Н_УЧЕНИКИ.ИД, 
    Н_УЧЕНИКИ.ЧЛВК_ИД 
  FROM 
    Н_УЧЕНИКИ 
  WHERE 
    Н_УЧЕНИКИ.ГРУППА = '3100'
) 
SELECT 
  count(*) 
FROM 
  (
    SELECT 
      УЧЕНИКИ_3100.ИД 
    FROM 
      УЧЕНИКИ_3100 
      INNER JOIN Н_ВЕДОМОСТИ USING (ЧЛВК_ИД) 
    WHERE 
      Н_ВЕДОМОСТИ.ОЦЕНКА = '5' 
    GROUP BY 
      УЧЕНИКИ_3100.ИД
  ) AS ТРОЕЧНИКИ 
WHERE 
  ТРОЕЧНИКИ.ИД NOT IN (
    SELECT 
      УЧЕНИКИ_3100.ИД 
    FROM 
      УЧЕНИКИ_3100 
      INNER JOIN Н_ВЕДОМОСТИ USING (ЧЛВК_ИД) 
    WHERE 
      Н_ВЕДОМОСТИ.ОЦЕНКА IN ('2', 'незач') 
    GROUP BY 
      УЧЕНИКИ_3100.ИД
  );
